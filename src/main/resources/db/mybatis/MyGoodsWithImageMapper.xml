<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.westee.sales.dao.MyGoodsWithImageMapper">
    <resultMap id="BaseResultMap" type="com.westee.sales.entity.GoodsWithImages">
        <id column="ID" jdbcType="BIGINT" property="id" />
        <result column="NAME" jdbcType="VARCHAR" property="name" />
        <result column="CATEGORY_ID" jdbcType="BIGINT" property="categoryId" />
        <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
        <result column="DETAILS" jdbcType="VARCHAR" property="details" />
        <result column="PRICE" jdbcType="DECIMAL" property="price" />
        <result column="VIP_PRICE" jdbcType="DECIMAL" property="vipPrice" />
        <result column="STOCK" jdbcType="BIGINT" property="stock" />
        <result column="WEIGHT" jdbcType="BIGINT" property="weight" />
        <result column="GOODS_TYPE" jdbcType="BIGINT" property="goodsType" />
        <result column="CREATED_AT" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="UPDATED_AT" jdbcType="TIMESTAMP" property="updatedAt" />
        <collection property="images" ofType="java.lang.String" javaType="java.util.List">
            <result column="images" jdbcType="VARCHAR" property=""/>
        </collection>
    </resultMap>

    <select id="getGoodsWithImage" resultMap="BaseResultMap">
        SELECT
            g.ID,
            g.NAME,
            g.CATEGORY_ID,
            g.DESCRIPTION,
            g.DETAILS,
            g.PRICE,
            g.VIP_PRICE,
            g.STOCK,
            g.IMG_URL,
            g.SHOP_ID,
            g.WEIGHT,
            g.GOODS_TYPE,
            g.CREATED_AT,
            g.UPDATED_AT,
            gi.URL  AS images
        FROM
            GOODS g
                LEFT JOIN (
                SELECT
                    p.URL,
                    p.OWNER_GOODS_ID,
                    p.DELETED
                FROM
                    GOODS_IMAGE p
            ) gi ON g.ID = gi.OWNER_GOODS_ID and gi.DELETED = 0
        WHERE
            g.ID = #{id}
    </select>
    <select id="getGoodsListWithImageByShopId" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
            g.ID,
            g.NAME,
            g.CATEGORY_ID,
            g.DESCRIPTION,
            g.DETAILS,
            g.PRICE,
            g.VIP_PRICE,
            g.STOCK,
            g.IMG_URL,
            g.SHOP_ID,
            g.WEIGHT,
            g.GOODS_TYPE,
            g.CREATED_AT,
            g.UPDATED_AT,
            gi.URL AS images
        FROM
            GOODS g
            LEFT JOIN GOODS_IMAGE gi ON g.ID = gi.OWNER_GOODS_ID and gi.DELETED = 0
        WHERE
            g.SHOP_ID = #{id}
            <if test="status == 'zero'">
                AND g.STOCK = 0
            </if>
            <if test="status != 'zero'">
                AND g.STATUS = #{status}
            </if>
        limit #{offset} , #{limit}
    </select>
    <select id="getGoodsListWithImageByShopIdAndCategory" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT g.ID,
               g.NAME,
               g.CATEGORY_ID,
               g.DESCRIPTION,
               g.DETAILS,
               g.PRICE,
               g.VIP_PRICE,
               g.STOCK,
               g.IMG_URL,
               g.SHOP_ID,
               g.WEIGHT,
               g.GOODS_TYPE,
               g.CREATED_AT,
               g.UPDATED_AT,
               gi.URL AS images
        FROM GOODS g
                 LEFT JOIN GOODS_IMAGE gi ON g.ID = gi.OWNER_GOODS_ID and gi.DELETED = 0
        WHERE g.SHOP_ID = #{id}
          and g.CATEGORY_ID = #{categoryId}
          and g.STATUS = 'ok'
    </select>

</mapper>