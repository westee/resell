<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.westee.cake.dao.ShoppingCartQueryMapper">
    <select id="countShopsInUserShoppingCart" resultType="int" parameterType="long">
        select COUNT(distinct  SHOPPING_CART.SHOP_ID) from SHOPPING_CART where USER_ID = #{userId} and STATUS = 'ok'
    </select>

    <resultMap id="getShoppingCartResultMap" type="com.westee.cake.entity.ShoppingCartData">
        <association property="shop" javaType="com.westee.cake.generate.Shop">
            <id property="id" column="SHOP_ID"/>
            <result property="name" column="SHOP_NAME"/>
            <result property="description" column="SHOP_DESCRIPTION"/>
            <result property="imgUrl" column="SHOP_IMG_URL"/>
            <result property="ownerUserId" column="SHOP_OWNER_ID"/>
            <result property="createdAt" column="SHOP_CREATED_AT"/>
            <result property="updatedAt" column="SHOP_UPDATED_AT"/>
        </association>
        <collection property="goods" ofType="com.westee.cake.entity.ShoppingCartGoods" javaType="java.util.List">
            <id property="id" column="GOODS_ID"/>
            <result property="name" column="GOODS_NAME"/>
            <result property="shoppingCartId" column="SHOPPING_CART_ID"/>
            <result property="description" column="GOODS_DESCRIPTION"/>
            <result property="details" column="GOODS_DETAILS"/>
            <result property="imgUrl" column="GOODS_IMG_URL"/>
            <result property="price" column="GOODS_PRICE"/>
            <result property="number" column="GOODS_NUMBER"/>
            <result property="shopId" column="SHOP_ID"/>
            <result property="createdAt" column="GOODS_CREATED_AT"/>
            <result property="updatedAt" column="GOODS_UPDATED_AT"/>
            <collection property="images" column="IMAGES" ofType="java.lang.String" javaType="java.util.List">
                <result column="images" jdbcType="VARCHAR" property="java.lang.String"/>
            </collection>
        </collection>
    </resultMap>

    <select id="selectShoppingCartDataByUserId" parameterType="Map" resultMap="getShoppingCartResultMap">
        select SHOP.ID              as SHOP_ID,
               SHOP.NAME            as SHOP_NAME,
               SHOP.DESCRIPTION     as SHOP_DESCRIPTION,
               SHOP.IMG_URL         as SHOP_IMG_URL,
               SHOP.OWNER_USER_ID   as SHOP_OWNER_ID,
               SHOP.CREATED_AT      as SHOP_CREATED_AT,
               SHOP.UPDATED_AT      as SHOP_UPDATED_AT,
               SHOP.STATUS      as SHOP_STATUS,

               GOODS.ID             as GOODS_ID,
               GOODS.NAME           as GOODS_NAME,
               GOODS.DESCRIPTION    as GOODS_DESCRIPTION,
               GOODS.DETAILS        as GOODS_DETAILS,
               GOODS.IMG_URL        as GOODS_IMG_URL,
               GOODS.PRICE          as GOODS_PRICE,
               GOODS.CREATED_AT     as GOODS_CREATED_AT,
               GOODS.UPDATED_AT     as GOODS_UPDATED_AT,
               SHOPPING_CART.NUMBER as GOODS_NUMBER,
               SHOPPING_CART.ID     as SHOPPING_CART_ID,
               (
                   SELECT URL
                   FROM GOODS_IMAGE
                   WHERE DELETED = 0 AND OWNER_GOODS_ID = GOODS.ID
                   LIMIT 1
              )      as IMAGES
        from (
              select distinct SHOP_ID, USER_ID, GOODS_ID
              from SHOPPING_CART
              where USER_ID = #{userId}
                  and STATUS = 'ok'
                  limit #{offset}, #{limit}
              ) t1
              join SHOPPING_CART on t1.USER_ID = SHOPPING_CART.USER_ID
              join GOODS on SHOPPING_CART.GOODS_ID = GOODS.ID
              join SHOP on t1.SHOP_ID = SHOP.ID
        where SHOPPING_CART.STATUS = 'ok'
    </select>

    <select id="selectAllShoppingCartDataByUserId" parameterType="Map" resultMap="getShoppingCartResultMap">
        select SHOP.ID              as SHOP_ID,
               SHOP.NAME            as SHOP_NAME,
               SHOP.DESCRIPTION     as SHOP_DESCRIPTION,
               SHOP.IMG_URL         as SHOP_IMG_URL,
               SHOP.OWNER_USER_ID   as SHOP_OWNER_ID,
               SHOP.CREATED_AT      as SHOP_CREATED_AT,
               SHOP.UPDATED_AT      as SHOP_UPDATED_AT,

               GOODS.ID             as GOODS_ID,
               GOODS.NAME           as GOODS_NAME,
               GOODS.DESCRIPTION    as GOODS_DESCRIPTION,
               GOODS.DETAILS        as GOODS_DETAILS,
               GOODS.IMG_URL        as GOODS_IMG_URL,
               GOODS.PRICE          as GOODS_PRICE,
               GOODS.CREATED_AT     as GOODS_CREATED_AT,
               GOODS.UPDATED_AT     as GOODS_UPDATED_AT,
               SHOPPING_CART.NUMBER as GOODS_NUMBER,
               GOODS_IMAGE.URL      as IMAGES
        from (select distinct SHOP_ID, GOODS_ID
              from SHOPPING_CART
              where USER_ID = #{userId}
                and STATUS = 'ok'
                and SHOP_ID = #{shopId}) t1
                 join SHOPPING_CART on t1.SHOP_ID = SHOPPING_CART.SHOP_ID
                 join GOODS on SHOPPING_CART.GOODS_ID = GOODS.ID
                 join SHOP on t1.SHOP_ID = SHOP.ID
                 left join GOODS_IMAGE on DELETED = 0 and OWNER_GOODS_ID = t1.GOODS_ID
    </select>

    <delete id="deleteShoppingCart" parameterType="Map">
        update SHOPPING_CART
        set STATUS = 'deleted', UPDATED_AT = now()
        where USER_ID = #{userId} and GOODS_ID = #{goodsId}
    </delete>
</mapper>